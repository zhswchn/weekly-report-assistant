name: 'publish'

on:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install pnpm
        run: npm install -g pnpm

      - name: install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        id: tauri-build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: 'Weekly Report Assistant v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      # 准备单独的 exe 文件
      - name: Prepare exe file for release
        shell: bash
        run: |
          mkdir -p release-files
          cp src-tauri/target/release/weekly-report-assistant.exe release-files/

      # 将单独的 exe 文件上传到已存在的 Release
      - name: Upload additional exe to existing release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');

            const tagName = '${{ steps.tauri-build.outputs.tagName }}';
            const exePath = path.join('release-files', 'weekly-report-assistant.exe');

            // 获取当前 Release
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const release = releases.find(r => r.tag_name === tagName && r.draft === true);

            if (!release) {
              core.setFailed(`Could not find draft release with tag ${tagName}`);
              return;
            }

            console.log(`Found release: ${release.id}, uploading exe file...`);

            // 上传文件到已有的 Release
            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.id,
              name: 'weekly-report-assistant.exe',
              data: fs.readFileSync(exePath)
            });

            console.log('Successfully uploaded exe file to the release');
